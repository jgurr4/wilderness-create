Next Steps:
#-1: Actually experiment with 'unlocks'  and 'required_by' in neo4j to determine what the possible problems would be in the resulting tech tree. 
#0: Decide if I would rather have a tech tree that uses `unlocks` instead of `required_by`. The benefit of required_by is it is simpler, because it means I won't have to predetermine which techs/skills are the final step in unlocking a specific Tech/Skill. I think I will do that after all, it seems to tricky to try and do unlocks
#1: Make a excel sheet that has all the techs and edges. Each one will be used to generate the necessary neo4j queries.
#1: Complete missing fields of existing list in my excel sheet
#2: Follow the steps outlined here to import csv file into neo4j: https://community.neo4j.com/t5/neo4j-graph-platform/create-relationship-from-csv-on-existing-nodes/m-p/32326
    - This guide may also help: https://neo4j.com/developer/guide-import-csv/
#3: After completing the test above successfully, I can take a break from wildernesCreate for a while until I finish with observability-bridge and other stuff.
#4: When I get back from break: Work on getting first version of tech tree done
#5: Design the Fundamentals  (the basic building blocks of deep topics like physical exercise, energy production, mathematics, measurement system, knot tying, cooking, first aid, scientific method, self education, documentation/preserving knowledge and wisdom, gardening/foraging/medicinal herbs/plant testing, hunting/trapping, animal husbandry, human psychology etc...)
#6: Design the life guide  (Family, community, meaning and spirituality)
#7: Design the principles of freedom guide  (becoming independent from all things and systems, and putting government in it's place, open source, decentralization etc...)
#8: Design survival guide
#9: Share it with the world

Alternatively:
copy the add-node script and adapt it to work like this:
add-nodes excel.txt
Step 1: Copy all the data from excel sheet
Step 2: Input directly into neo4j

It should read all the data, and create each node all at once. It should also create the relationships correctly as well. So here is how I think the excel sheet should look:
name	type 	  primary purpose	instructions	image		unlocks	 used_with  by-products   references      fundamentals
puki    Tech      round clay pots       first ...       blank.png       none     clay 	    none          video url       pottery
clay	Material  making pottery        do ...          blank.png       puki     none 	    sand	  online article  pottery

TODO: Consider removing 
- sub_groups
- used_with 
- by-products 
since those are extra unecessary things
NOTE: I am not sure how neo4j can interpret relationships from above. Hopefully it has some smart way of doing it. Look into that before doing much in excel sheet.
TODO: Consider replacing instructions with 3 columns of methods i.e. method1, method2, method3. Because it would be nice for people to see alternative ways of obtaining the same thing.
TODO: Figure out how Techniques, and fundamentals fits into all this.
TODO: Consider having a 'by_products' field which lists all the possible byproducts produced during the fulfillment of the process outlined in the instructions for this task.
TODO: Consider having a 'alternatives' field which lists all the possible alternatives for this tech in accomplishing the goal of obtaining the following tech/material.
TODO: Consider having a node called 'survival-tip' or something similar, which basically gives advice on what a person should do before continuing to pursue technological advancements. These things can give people a break from the tech focus, and let them enjoy life a little more, but also it could focus on a particular need they have. For example, when you're first starting you should only work on getting the tools you need to obtain clean water. Actually maybe just include a node after a specific node. For example after 'water filter' node, say it UNLOCKS 'drinkable water'
NOTE: Alternative-methods only includes methods that are possible to the individual at time of unlocking that node. Later methods can be utilized as they see fit.
TODO: Things like 'clean water foraging' and 'rainwater collecting' are tasks that can be accomplished a myriad of ways. Perhaps I can make a new type of node called 'methods' in case someone wants to see all the possible methods for obtaining something at the stage they are at, they could simply add more if they think of any.
For example: drinkable water, alternative methods: rainwater collecting, method-1: create a large pot and set outside with, method-2: 
NOTE: People should only create method nodes and add them as alternative methods for the Techs that are extremely crucial.

rough draft:
Node Types: Materials, Techs
Materials UNLOCK Techs
Techs UNLOCK Techs/Materials
Techs USED_WITH Techs/Materials
Don't use these:
# Techs SUBSTITUTE_FOR Techs/Materials
# Materials SUBSTITUTE_FOR Materials


